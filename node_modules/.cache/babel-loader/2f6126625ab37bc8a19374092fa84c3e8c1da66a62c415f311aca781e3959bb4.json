{"ast":null,"code":"import React,{useContext,useState,useEffect}from\"react\";//import { auth } from \"../../firebase/firebase\";\nimport{GoogleAuthProvider}from\"firebase/auth\";import{onAuthStateChanged}from\"firebase/auth\";import{auth}from'./firebase/auth';import{initializeApp}from'./firebase/firebase';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/React.createContext();export function useAuth(){return useContext(AuthContext);}export function AuthProvider(_ref){let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[userLoggedIn,setUserLoggedIn]=useState(false);const[isEmailUser,setIsEmailUser]=useState(false);const[isGoogleUser,setIsGoogleUser]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{const unsubscribe=onAuthStateChanged(auth,initializeUser);return unsubscribe;},[]);async function initializeUser(user){if(user){setCurrentUser({...user});// Check if provider is email and password login\nconst isEmail=user.providerData.some(provider=>provider.providerId===\"password\");setIsEmailUser(isEmail);// Check if the auth provider is google or not\nconst isGoogle=user.providerData.some(provider=>provider.providerId===GoogleAuthProvider.PROVIDER_ID);setIsGoogleUser(isGoogle);setUserLoggedIn(true);}else{setCurrentUser(null);setUserLoggedIn(false);}setLoading(false);}const value={userLoggedIn,isEmailUser,isGoogleUser,currentUser,setCurrentUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});}","map":{"version":3,"names":["React","useContext","useState","useEffect","GoogleAuthProvider","onAuthStateChanged","auth","initializeApp","jsx","_jsx","AuthContext","createContext","useAuth","AuthProvider","_ref","children","currentUser","setCurrentUser","userLoggedIn","setUserLoggedIn","isEmailUser","setIsEmailUser","isGoogleUser","setIsGoogleUser","loading","setLoading","unsubscribe","initializeUser","user","isEmail","providerData","some","provider","providerId","isGoogle","PROVIDER_ID","value","Provider"],"sources":["C:/Users/bensu/OneDrive/Documents/College Work/CSE/CSE4334/Project/Girl-Scout-Cookies-App/src/auth_context.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\n//import { auth } from \"../../firebase/firebase\";\r\nimport { GoogleAuthProvider } from \"firebase/auth\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth } from './firebase/auth';\r\nimport { initializeApp } from './firebase/firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n    const [isEmailUser, setIsEmailUser] = useState(false);\r\n    const [isGoogleUser, setIsGoogleUser] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, initializeUser);\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    async function initializeUser(user) {\r\n        if (user) {\r\n            setCurrentUser({ ...user });\r\n            // Check if provider is email and password login\r\n            const isEmail = user.providerData.some(\r\n                (provider) => provider.providerId === \"password\"\r\n            );\r\n            setIsEmailUser(isEmail);\r\n\r\n            // Check if the auth provider is google or not\r\n            const isGoogle = user.providerData.some(\r\n                (provider) => provider.providerId === GoogleAuthProvider.PROVIDER_ID\r\n            );\r\n            setIsGoogleUser(isGoogle);\r\n\r\n            setUserLoggedIn(true);\r\n        } else {\r\n            setCurrentUser(null);\r\n            setUserLoggedIn(false);\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const value = {\r\n        userLoggedIn,\r\n        isEmailUser,\r\n        isGoogleUser,\r\n        currentUser,\r\n        setCurrentUser\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n        {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC9D;AACA,OAASC,kBAAkB,KAAQ,eAAe,CAClD,OAASC,kBAAkB,KAAQ,eAAe,CAClD,OAASC,IAAI,KAAQ,iBAAiB,CACtC,OAASC,aAAa,KAAQ,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpD,KAAM,CAAAC,WAAW,cAAGV,KAAK,CAACW,aAAa,CAAC,CAAC,CAEzC,MAAO,SAAS,CAAAC,OAAOA,CAAA,CAAG,CACxB,MAAO,CAAAX,UAAU,CAACS,WAAW,CAAC,CAChC,CAEA,MAAO,SAAS,CAAAG,YAAYA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACgB,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACkB,WAAW,CAAEC,cAAc,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACoB,YAAY,CAAEC,eAAe,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACsB,OAAO,CAAEC,UAAU,CAAC,CAAGvB,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAuB,WAAW,CAAGrB,kBAAkB,CAACC,IAAI,CAAEqB,cAAc,CAAC,CAC5D,MAAO,CAAAD,WAAW,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,cAAe,CAAAC,cAAcA,CAACC,IAAI,CAAE,CAChC,GAAIA,IAAI,CAAE,CACNX,cAAc,CAAC,CAAE,GAAGW,IAAK,CAAC,CAAC,CAC3B;AACA,KAAM,CAAAC,OAAO,CAAGD,IAAI,CAACE,YAAY,CAACC,IAAI,CACjCC,QAAQ,EAAKA,QAAQ,CAACC,UAAU,GAAK,UAC1C,CAAC,CACDZ,cAAc,CAACQ,OAAO,CAAC,CAEvB;AACA,KAAM,CAAAK,QAAQ,CAAGN,IAAI,CAACE,YAAY,CAACC,IAAI,CAClCC,QAAQ,EAAKA,QAAQ,CAACC,UAAU,GAAK7B,kBAAkB,CAAC+B,WAC7D,CAAC,CACDZ,eAAe,CAACW,QAAQ,CAAC,CAEzBf,eAAe,CAAC,IAAI,CAAC,CACzB,CAAC,IAAM,CACHF,cAAc,CAAC,IAAI,CAAC,CACpBE,eAAe,CAAC,KAAK,CAAC,CAC1B,CAEAM,UAAU,CAAC,KAAK,CAAC,CACrB,CAEA,KAAM,CAAAW,KAAK,CAAG,CACVlB,YAAY,CACZE,WAAW,CACXE,YAAY,CACZN,WAAW,CACXC,cACJ,CAAC,CAED,mBACIR,IAAA,CAACC,WAAW,CAAC2B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAArB,QAAA,CAClC,CAACS,OAAO,EAAIT,QAAQ,CACC,CAAC,CAE/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}